echo "# mkt" >> README.md
git init
git add README.md
git config --global user.email "obiazzi@gmail.com"
git config --global user.name "obiazzi"
git commit -m "cs inicial"
git remote add origin https://github.com/ombzzz/mkt.git
git push -u origin master
.
echo sqlite-doc-3220000/ > .gitignore

#luego de trabajar un poco y crear nuevos archivos

git add .

git commit -m avance

git push -u origin master

sudo apt-get install php5-cli

sudo apt-get install php5-fpm php5-curl	php5-json;

# en estos se puede cambiar la configuracion del cgi, por ej, el usuario con que corre
# por ahora le dejo el usuario que viene por defecto: www-data
# (www es el pool por defecto)
#/etc/php5/fpm/php-fpm.conf
#/etc/php5/fpm/pool.d/www.conf

#editar /etc/php5/fpm/pool.d/www.conf agregar lo siguiente para que los errores php se muestren en pantalla
#sino van solo a /var/log/nginx/error.log:
php_flag[display_errors] = on
php_flag[display_startup_errors] = on

sudo service php5-fpm restart


sudo apt-get install nginx

#editar /etc/nginx/sites-enabled/default 

server {
	#listen   80; ## listen for ipv4; this line is default and implied
	#listen   [::]:80 default_server ipv6only=on; ## listen for ipv6

	#root /usr/share/nginx/www;
	root /home/eliveuser/mkt;
	index index.html;

	# Make site accessible from http://localhost/
	server_name localhost;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ /index.html;
		try_files $uri $uri/; 

		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}

	location /doc/ {
		alias /usr/share/doc/;
		autoindex on;
		allow 127.0.0.1;
		allow ::1;
		deny all;
	}

    location  ~  \.php  {
      fastcgi_split_path_info ^(.+?\.php)(/.*)$;
      fastcgi_pass unix:/var/run/php5-fpm.sock;
      fastcgi_index index.php;
      # include the fastcgi_param setting
      include fastcgi_params;
      fastcgi_param  SCRIPT_FILENAME   $document_root$fastcgi_script_name;
    }
}

sudo service nginx restart

sudo apt-get install sqlite php5-sqlite

sqlite3 mkt.db

create table asset (
	tck,
	den,
	sect,
	mkt,
	mervl, primary key( tck )
);


create table as_spr(
	tck,
	mkt,
	fec,
	open,
	close,
	min,
	max,
	vol,
	per,
	yld,
	primary key( tck, mkt, fec )
);


El método de autenticación que se utiliza en esta plataforma son tokens digitales. Los tokens son simples strings que se envían al servidor. Existen dos tipos de tokens: bearer token y refresh tokens. El bearer token se debe presentar en cada request para poder acceder al recurso solicitado. Este token es válido por 15 minutos desde que se lo solicita. Para renovar este token, se utiliza el refresh token. Para obtener el primer par de tokens se realiza un request POST especificando el nombre de usuario y contraseña a:

https://api.invertironline.com/token 
POST /token HTTP/1.1
Host: api.invertironline.com
Content-Type: application/x-www-form-urlencoded
username=MIUSUARIO&password=MICONTRASEÑA&grant_type=password

Una vez realizada esta petición, se debe utilizar el bearer token para acceder al recurso deseado, para hacer esto, se envía el token en el header de la petición con el Key “authorization” y como valor el token precedido de la palabra Bearer y un espacio como se ve en el ejemplo:


GET /api/micuenta/miportafolio HTTP/1.1
Host: api.invertironline.com
Authorization: Bearer aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

Una vez expirado el bearer token, se procede a refrescar el mismo con el refresh token. Para realizar esto se debe mandar la siguiente petición al mismo endpoint donde realizamos el login (https://api.invertironline.com/token)

POST /token HTTP/1.1
Host: api.invertironline.com
Content-Type: application/x-www-form-urlencoded
refresh_token=bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&grant_type=refresh_token

